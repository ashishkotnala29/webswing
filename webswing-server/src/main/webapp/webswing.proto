package org.webswing.server.model.proto;

/* ===================SERVER -> BROWSER====================*/

message AppFrameMsgOutProto{
	repeated ApplicationInfoMsgProto applications = 1;
	optional LinkActionMsgProto linkAction = 2;
	optional WindowMoveActionMsgProto moveAction = 3;
	optional CursorChangeEventMsgProto cursorChange = 4;
	optional CopyEventMsgProto copyEvent = 5;
	optional FileDialogEventMsgProto fileDialogEvent = 6;
	repeated WindowMsgProto windows = 7;
	optional WindowMsgProto closedWindow = 8;
	optional SimpleEventMsgOutProto event = 9;
	optional string user = 10;
}

message ApplicationInfoMsgProto{
	required string name = 1;
	optional bytes base64Icon = 2;
}

message LinkActionMsgProto{
	required LinkActionTypeProto action = 1;
	required string src = 2;

	enum LinkActionTypeProto{
		file = 0;
		url = 1;
		print = 2;
	}
}

message WindowMoveActionMsgProto{
	optional sint32 sx = 1;
	optional sint32 sy = 2;
	optional sint32 dx = 3;
	optional sint32 dy = 4;
	optional uint32 width = 5;
	optional uint32 height = 6;
}

message CursorChangeEventMsgProto{
	required string cursor = 1;
}

message CopyEventMsgProto{
	optional string content = 1;
}

message FileDialogEventMsgProto{
	required FileDialogEventTypeProto eventType = 1;
	optional bool allowDownload = 2;
	optional bool allowUpload = 3;
	optional bool allowDelete = 4;
	optional string filter = 5;
	optional bool isMultiSelection = 6;

	enum FileDialogEventTypeProto {
		Open = 0;
		Close = 1;
	}
}

message WindowMsgProto{
	required string id = 1;
	repeated WindowPartialContentMsgProto content = 2;
	optional bytes directDraw = 3;
	optional string title = 4;
	optional sint32 posX = 5;
	optional sint32 posY = 6;
	optional uint32 width = 7;
	optional uint32 height = 8;
}

message WindowPartialContentMsgProto{
	optional sint32 positionX = 1;
	optional sint32 positionY = 2;
	optional uint32 width = 3;
	optional uint32 height = 4;
	optional bytes base64Content = 5;
}

enum SimpleEventMsgOutProto{
	applicationAlreadyRunning = 0;
	shutDownNotification = 1;
	tooManyClientsNotification = 2;
	continueOldSession = 3;
	configurationError = 4;
}


/* ===================BROWSER -> SERVER====================*/
message InputEventsFrameMsgInProto{
	repeated InputEventMsgInProto events = 1;
	optional PasteEventMsgInProto paste = 2;
	optional UploadEventMsgInProto upload = 3;
	optional UploadedEventMsgInProto uploaded = 4;
}

message InputEventMsgInProto{
	optional ConnectionHandshakeMsgInProto handshake = 1;
	optional KeyboardEventMsgInProto key = 2;
	optional MouseEventMsgInProto mouse = 3;
	optional SimpleEventMsgInProto event = 4;
}

message ConnectionHandshakeMsgInProto{
	optional string clientId = 1;
	optional string sessionId = 2;
	optional uint32 desktopWidth = 3;
	optional uint32 desktopHeight = 4;
	optional string applicationName = 5;
	optional bool mirrored = 6;
	optional bool directDrawSupported = 7;
}

message KeyboardEventMsgInProto{
	optional string clientId = 1;
	optional KeyEventTypeProto type = 2;
	optional sint32 character = 3;
	optional sint32 keycode = 4; 
	optional bool alt = 5;
	optional bool ctrl = 6;
	optional bool shift = 7;
	optional bool meta = 8;
	optional bool altgr = 9;
	
	enum KeyEventTypeProto {
		keypress = 0;
		keydown = 1;
		keyup = 2;
	}
}

message MouseEventMsgInProto{
	optional string clientId = 1;
	optional sint32 x = 2;
	optional sint32 y = 3;
	optional MouseEventTypeProto type = 4;
	optional sint32 wheelDelta = 5;
	optional sint32 button = 6;
	optional bool ctrl = 7;
	optional bool alt = 8;
	optional bool shift = 9;
	optional bool meta = 10;
	
	enum MouseEventTypeProto {
		mousemove = 0;
		mousedown = 1;
		mouseup = 2;
		mousewheel = 3;
		dblclick = 4;
	}
}

message PasteEventMsgInProto{
	optional string clientId = 1;
	optional string content = 2;
}

message SimpleEventMsgInProto{
	optional SimpleEventTypeProto type = 1;
	optional string clientId = 2;
	
	enum SimpleEventTypeProto {
		unload = 0;
		killSwing = 1;
		paintAck = 2;
		repaint = 3;
		downloadFile = 4;
		deleteFile = 5;
		hb = 6;
	}
}

message UploadedEventMsgInProto{
	repeated string files = 1;
	optional string clientId = 2;
}

message UploadEventMsgInProto{
    optional string fileName = 2;
    optional string tempFileLocation = 3;
}


