// Mixins

// Drop shadows, from low to high altitude

@mixin dropshadow-1 {
    box-shadow: 0 1px 3px rgba($black, 0.12), 0 1px 2px rgba($black, 0.24);
}

@mixin dropshadow-2 {
    box-shadow: 0 3px 6px rgba($black, 0.16), 0 3px 6px rgba($black, 0.23);
}

@mixin dropshadow-3 {
    box-shadow: 0 10px 20px rgba($black, 0.19), 0 6px 6px rgba($black, 0.23);
}

@mixin dropshadow-4 {
    box-shadow: 0 14px 28px rgba($black, 0.25), 0 10px 10px rgba($black, 0.22);
}

@mixin dropshadow-5 {
    box-shadow: 0 19px 38px rgba($black, 0.30), 0 15px 12px rgba($black, 0.22);
}

// Border Radius
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
       -moz-border-radius: $radius;
              border-radius: $radius;
}
// Transitions
// Usage: @include transition(color .3s ease);
@mixin transition-duration($args) {
    -webkit-transition-duration: $args;
       -moz-transition-duration: $args;
        -ms-transition-duration: $args;
          -o-transition-duration: $args;
              transition-duration: $args;
}

// Baseline, measured in pixels
// The value should be the same as the font-size value for the html element
// If the html element's font-size is set to 62.5% (of the browser's default font-size of 16px),
// then the variable below would be 10px.
$baseline-px: 16px;

@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem * 1;

  // Print the first line in pixel values
  #{$property}: $px-values;

  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem;
  } @else {
    // Create an empty list that we can dump values into
    $rem-values: ();
    @each $value in $px-values {
      // If the value is zero or not a number, return it
      @if is-equal( $value , 0 ) or type-of( $value ) != "number" {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem); } }
    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}

@function is-equal($one, $two) {
  @if type-of($one) == number and type-of($two) == number {
    @if unit($one) == unit($two) {
      @return $one == $two;
    } @else {
      @return false;
    }
  } @else {
    @return $one == $two;
  }
}