// Mixins

// Transitions
@import "compass/css3/transition";
$default-transition-property:         all;
$default-transition-duration:        0.2s;
$default-transition-function: ease-in-out;
$default-transition-delay:          false;

// Drop shadows, from low to high altitude
@mixin dropshadow-1 {
	box-shadow: 0 1px 3px rgba($black, 0.12), 0 1px 2px rgba($black, 0.24);
}

@mixin dropshadow-2 {
	box-shadow: 0 3px 6px rgba($black,0.16), 0 3px 6px rgba($black,0.23);
}

@mixin dropshadow-3 {
	box-shadow: 0 10px 20px rgba($black,0.19), 0 6px 6px rgba($black,0.23);
}

@mixin dropshadow-4 {
	box-shadow: 0 14px 28px rgba($black,0.25), 0 10px 10px rgba($black,0.22);
}

@mixin dropshadow-5 {
	box-shadow: 0 19px 38px rgba($black,0.30), 0 15px 12px rgba($black,0.22);
}

// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

// rem calculator with px fallback
// usage: @include rem('padding',10px 0 2px 5px); 
// usage #2: @include rem('border', 1px solid red);
@mixin rem($property, $px-values) {

  // Convert the base font size from _config.scss into rems
  $baseline-rem: $base-size / 1rem;

  // Print the first line in pixel values
  #{$property}: $px-values;

  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem; }
  @else {

    // Create an empty list that we can dump values into
    $rem-values: unquote("");
    @each $value in $px-values {

      // If the value is zero or a string or a color, return unchanged input
      @if $value == 0 or type-of($value) == "string" or type-of($value) == "color" {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem); } }
        
    // Return the property and its list of converted values
    #{$property}: $rem-values; } }